{"version":3,"sources":["components/Addtransaction.jsx","components/Details.jsx","components/Transaction.jsx","App.js","index.js"],"names":["Addtransaction","props","useState","amount","setAmount","billtype","setBillType","transtype","setTransType","isdisable","setIsdisable","useEffect","className","onSubmit","event","preventDefault","setTransactionsArr","prevVal","parseInt","setIsOpen","value","type","onChange","e","target","placeholder","defaultChecked","name","onClick","disabled","style","cursor","Details","color","expense","income","Transaction","App","isOpen","setIncome","setExpense","transactionsArr","filterTxn","setFilterTxn","search","setSearch","timeOutId","setTimeout","filteredArr","filter","transactionObj","toLowerCase","trim","indexOf","clearTimeout","totalIncome","reduce","accum","totalExpense","Math","abs","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8f16693.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../css/app.css\";\r\n\r\nexport default function Addtransaction(props) {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [billtype, setBillType] = useState(\"\");\r\n  const [transtype, setTransType] = useState(\"\");\r\n  const [isdisable, setIsdisable] = useState();\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.setTransactionsArr((prevVal) => {\r\n      return [\r\n        ...prevVal,\r\n        {\r\n          amount: parseInt(amount),\r\n          billtype: billtype,\r\n          transtype: transtype,\r\n        },\r\n      ];\r\n    });\r\n\r\n    props.setIsOpen(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    function checkAble() {\r\n      if (amount !== \"\" && billtype !== \"\" && transtype !== \"\") {\r\n        setIsdisable(\"\");\r\n      } else {\r\n        setIsdisable(true);\r\n      }\r\n    }\r\n\r\n    checkAble();\r\n  }, [amount, billtype, transtype]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"add-transaction-container\">\r\n        <form onSubmit={handleSubmit} className=\"flex-column\">\r\n          <input\r\n            value={amount}\r\n            type=\"text\"\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"Enter Amount\"\r\n          />\r\n          <input\r\n            value={billtype}\r\n            type=\"text\"\r\n            onChange={(e) => setBillType(e.target.value)}\r\n            placeholder=\"Enter Type\"\r\n          />\r\n          <div className=\"checkbox flex-row\">\r\n            <input\r\n              type=\"radio\"\r\n              defaultChecked={transtype === \"Expense\"}\r\n              name=\"type\"\r\n              value=\"Expense\"\r\n              onClick={() => setTransType(\"Expense\")}\r\n            />\r\n            <span>Expense</span>\r\n            <input\r\n              type=\"radio\"\r\n              defaultChecked={transtype === \"Income\"}\r\n              name=\"type\"\r\n              value=\"Income\"\r\n              onClick={() => setTransType(\"Income\")}\r\n            />\r\n            <span>Income</span>\r\n          </div>\r\n          <button\r\n            disabled={isdisable ? \"true\" : \"\"}\r\n            style={{ cursor: isdisable ? \"not-allowed\" : \"pointer\" }}\r\n            className=\"btn add-trans-btn\"\r\n          >\r\n            Add Transaction\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../css/app.css\";\r\nexport default function Details(props) {\r\n  return (\r\n    <>\r\n      <div className=\"details-container flex-row\">\r\n        <div className=\"detail-box flex-column\">\r\n          <p>Expense</p>\r\n          <p style={{ color: \"red\" }} className=\"amount\">\r\n            ${props.expense}\r\n          </p>\r\n        </div>\r\n        <div className=\"detail-box flex-column\">\r\n          <p>Income</p>\r\n          <p style={{ color: \"green\" }} className=\"amount\">\r\n            ${props.income}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../css/app.css\";\r\n\r\nexport default function Transaction(props) {\r\n  return (\r\n    <>\r\n      <div\r\n        className={`transaction-container flex-row ${\r\n          props.transtype === \"Income\" ? \"income\" : \"expense\"\r\n        } `}\r\n      >\r\n        <p>{props.billtype}</p>\r\n        <p>${props.amount}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./css/app.css\";\nimport Addtransaction from \"./components/Addtransaction\";\nimport Details from \"./components/Details\";\nimport Transaction from \"./components/Transaction\";\n\nfunction App() {\n  //hooks\n  const [isOpen, setIsOpen] = useState(false);\n  const [income, setIncome] = useState(0);\n  const [expense, setExpense] = useState(0);\n  const [transactionsArr, setTransactionsArr] = useState([]);\n  const [filterTxn, setFilterTxn] = useState([transactionsArr]);\n  const [search, setSearch] = useState(\"\");\n\n  //filter logic,fired on every change in search input\n  useEffect(() => {\n    let timeOutId = setTimeout(() => {\n      let txns = [...transactionsArr];\n      let filteredArr = txns.filter((transactionObj) => {\n        if (\n          transactionObj.billtype\n            .toLowerCase()\n            .trim()\n            .indexOf(search.toLowerCase().trim()) !== -1\n        ) {\n          return transactionObj;\n        }\n      });\n\n      setFilterTxn(filteredArr);\n    }, 250);\n    return () => {\n      clearTimeout(timeOutId);\n    };\n  }, [search]);\n\n  //calculte the total income and total expense everytime when a tranaction is made\n  useEffect(() => {\n    let totalIncome = transactionsArr.reduce((accum, transactionObj) => {\n      if (transactionObj.transtype === \"Income\") {\n        return (accum += transactionObj.amount);\n      } else {\n        return accum;\n      }\n    }, 0);\n\n    let totalExpense = transactionsArr.reduce((accum, transactionObj) => {\n      if (transactionObj.transtype === \"Expense\") {\n        return (accum += transactionObj.amount);\n      } else {\n        return accum;\n      }\n    }, 0);\n\n    setIncome(totalIncome);\n    setExpense(totalExpense);\n    setFilterTxn(transactionsArr);\n  }, [transactionsArr]);\n\n  //toggle isOpen\n  function toggleIsOpen() {\n    setIsOpen((prevVal) => !prevVal);\n  }\n\n  //function to get the color on basis of balance\n  function getColor() {\n    if (income - expense > 0) {\n      return \"green\";\n    } else if (income - expense < 0) {\n      return \"red\";\n    } else {\n      return \"black\";\n    }\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">Expense Tracker</h1>\n      {/* main container  */}\n      <div className=\"main-container flex-column\">\n        <div className=\"balance-container flex-row\">\n          <h1 className=\"sub-title \">\n            Balanace:{\" \"}\n            <span style={{ color: getColor() }}>\n              ${Math.abs(income - expense)}\n            </span>\n          </h1>\n          <button onClick={toggleIsOpen} className=\"btn\">\n            {isOpen ? \"CANCEL\" : \"ADD\"}\n          </button>\n        </div>\n\n        {/* add transaction form  */}\n        {isOpen && (\n          <Addtransaction\n            setIsOpen={setIsOpen}\n            setTransactionsArr={setTransactionsArr}\n          />\n        )}\n\n        {/* details div  */}\n        <Details income={income} expense={expense} />\n\n        {/* transactions div  */}\n        <div className=\"transactions-container flex-column\">\n          <h2 className=\"sub-title\">Transactions</h2>\n          <input\n            type=\"text\"\n            value={search}\n            onChange={(e) => {\n              setSearch(e.target.value);\n            }}\n            placeholder=\"Search\"\n          />\n          {filterTxn.map((transactionObj, index) => {\n            return (\n              <Transaction\n                key={index}\n                billtype={transactionObj.billtype}\n                amount={transactionObj.amount}\n                transtype={transactionObj.transtype}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}